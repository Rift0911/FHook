plugins {
    alias(libs.plugins.android.library)
    id 'maven-publish'  //确保发布功能可用
}

android {
    namespace 'top.feadre.core' // 这个不要重叠
    compileSdk 35
    ndkVersion '27.0.12077973'  // 显式指定的 NDK 版本
    buildToolsVersion "35.0.1"


    defaultConfig {
        minSdk 28

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        ndk {
            abiFilters "armeabi-v7a", "x86", 'arm64-v8a', 'x86_64'
//            abiFilters "armeabi-v7a", 'arm64-v8a', "x86"
//            abiFilters "arm64-v8a"
        }

    }

    // ndk配置2
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']  // 明确指向 so 存放目录
        }
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }

}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                artifactId = "fhook"
                pom {
                    name = "FHook"
                    description = "Android bytecode instrumentation + JVMTI agent (binary included)"
                    url = "https://github.com/Rift0911/FHook"
                    licenses {
                        license {
                            name = "Apache-2.0"
                            url  = "https://www.apache.org/licenses/LICENSE-2.0"
                        }
                    }
                    developers { developer { id = "Rift0911"; name = "Feadre" } }
                    scm { url = "https://github.com/Rift0911/FHook" }
                }
            }
        }
        // 4. 显式配置本地仓库（可选，但帮助 Gradle 识别发布目标）
        repositories {
            mavenLocal()
        }
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}